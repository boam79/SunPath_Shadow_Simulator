# SunPath & Shadow Simulator — 제품 요구사항 문서 (PRD)

## 1. 제품 개요

**제품명:** SunPath & Shadow (태양 경로·그림자 시뮬레이터)
**형태:** 웹 기반 (Next.js 프론트엔드 + Python FastAPI 백엔드)
**주요 목적:** 위치와 날짜를 입력해 해당 위치의 일조량, 해의 움직임, 그림자 방향 및 길이를 시각적으로 확인
**주요 사용자:** 병원/건축/시설 담당자, 태양광 설계자, 도시계획자, 농업 종사자, 사진작가, 일반 사용자
**차별화 요소:** 실시간 애니메이션, 고정밀 계산, 다양한 사용자 시나리오 지원

## 2. 기술 스택

**Frontend:**
- Next.js 14 (App Router): SSR + 클라이언트 컴포넌트
- MapLibre GL JS: OpenStreetMap 벡터 지도
- Tailwind CSS: UI 스타일링
- Recharts: 차트 및 그래프

**Backend:**
- FastAPI: API 서버
- pvlib-python: 태양 위치 계산 (NREL 검증 알고리즘)
- Redis: 캐싱 레이어

**Infrastructure:**
- Docker: 컨테이너화
- Vercel: 프론트엔드 배포
- AWS/Heroku: 백엔드 배포

## 3. 핵심 기능 (MVP)

### 3.1 위치 및 날짜 입력
- 주소 입력 → Nominatim 지오코딩 → 좌표 추출
- OSM(MapLibre) 지도 표시 및 위치 마커
- 날짜 선택 (기본: 오늘)
- 물체 높이 입력

### 3.2 태양 경로 계산
- NREL SPA 알고리즘 기반 고도/방위각 계산 (±0.05° 정확도)
- 1분 간격 시계열 데이터 생성
- 일출/일몰 시각 자동 산출
- 대기 굴절 보정

### 3.3 그림자 계산
- 물체 높이 입력 → 그림자 길이/방향 계산
- 태양 고도 0° 근처 특별 처리 (무한 그림자)
- 그림자 벡터 실시간 렌더링

### 3.4 일사량 계산
- Clear Sky Model (Ineichen 모델)
- GHI/DNI/DHI 계산
- 일일 총 일사량 적분 (kWh/m²)

### 3.5 타임라인 애니메이션
- 슬라이더 기반 동적 시뮬레이션
- Play/Pause/속도 조절 (0.5x~5x)
- 30fps 유지하며 부드러운 애니메이션
- 일출~일몰 구간 자동 재생

### 3.6 시각화
- 지도 위 태양 아이콘 표시 (방위각 기반)
- 그림자 벡터 렌더링
- 태양 궤적선 그리기 (하루 전체 경로)
- 차트 4종: 고도/방위각/일사량/그림자 길이
- 요약 대시보드 (일출/일몰, 최대 고도, 총 일사량)

### 3.7 데이터 내보내기
- CSV/JSON 형식 지원
- 모든 계산 결과 포함

## 4. 성능 요구사항

- 응답 시간: < 1초 (캐시 히트) / < 3초 (신규 계산)
- 애니메이션 FPS: 30fps 이상
- 계산 정확도: 태양 고도/방위각 ±0.05°
- 그림자 길이: ±2%
- 일사량 (맑은 날): ±5%

## 5. 사용자 경험

- 모바일 반응형 디자인
- 다크 모드 지원
- WCAG 2.1 Level AA 접근성
- 직관적인 UI/UX

## 6. 개발 우선순위

**Phase 1 (MVP - 4주):**
1. 프로젝트 초기 설정 (Next.js + FastAPI + Docker)
2. 백엔드 태양 위치 계산 API (pvlib-python)
3. 백엔드 그림자 계산 로직
4. 백엔드 일사량 계산 (Clear Sky Model)
5. Redis 캐싱 레이어
6. 프론트엔드 UI 레이아웃 (Tailwind CSS)
7. 지도 통합 (MapLibre GL JS)
8. 지오코딩 (Nominatim API)
9. 프론트-백 API 연동
10. 타임라인 슬라이더
11. 태양/그림자 시각화
12. 차트 및 데이터 표시
13. 데이터 내보내기
14. 테스트 작성
15. 배포 및 CI/CD

## 7. 테스트 전략

- 백엔드 단위 테스트 (pytest) - 커버리지 > 80%
- 프론트엔드 단위 테스트 (Jest) - 커버리지 > 70%
- API 통합 테스트
- E2E 테스트 (Playwright)
- 극한 조건 테스트 (극지방, 적도, 윤년)

## 8. 보안

- 입력 검증 (위도: -90~90, 경도: -180~180)
- Rate limiting
- CORS 설정
- HTTPS/TLS

## 9. 참고 자료

- NREL Solar Position Algorithm
- pvlib-python Documentation
- OpenStreetMap / Nominatim API
- Open-Meteo API

---

**목표:** 사용자가 주소만 입력하면 복잡한 태양 경로와 그림자를 실시간으로 시각화할 수 있는 직관적이고 정확한 웹 시뮬레이터 개발
